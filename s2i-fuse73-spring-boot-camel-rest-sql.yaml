apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: DEMO expenses app
metadata:
  annotations:
    description: Spring Boot, Camel REST DSL and MySQL QuickStart. This quickstart
      demonstrates how to connect a Spring Boot application to a MySQL database and
      expose a REST API with Camel on OpenShift. In this example we will use two containers,
      one container to run as a MySQL server, and another as a client to the database,
      where the Camel routes are running. This quickstart requires the MySQL server
      to be deployed and started first, one simple way to run a MySQL service is following
      the documentation of the OpenShift MySQL container image related to the mysql-ephemeral
      template.
    iconClass: icon-rh-integration
    openshift.io/display-name:  DEMO expenses app  Red Hat Fuse 7.4 Camel REST SQL with Spring Boot
    openshift.io/provider-display-name: Red Hat, Inc.
    tags: quickstart,java,springboot,fis,jboss-fuse
    version: "1.3"
  name: demo-s2i-fuse73-spring-boot-camel-rest-sql
objects:
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APP_NAME}
      component: ${APP_NAME}
      group: quickstarts
      provider: s2i
      version: ${APP_VERSION}
    name: ${SERVICE_NAME}-route
  spec:
    to:
      kind: Service
      name: ${SERVICE_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name": "${APP_NAME}-mysql","kind": "Service"}]'
    labels:
      app: ${APP_NAME}
      component: ${APP_NAME}
      group: quickstarts
      provider: s2i
      version: ${APP_VERSION}
    name: ${SERVICE_NAME}
  spec:
    clusterIP: None
    deprecatedPublicIPs: []
    ports:
    - port: 9411
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APP_NAME}
      component: ${APP_NAME}
      group: quickstarts
      provider: s2i
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The database server's port.
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-mysql
  spec:
    ports:
      - port: 3306
        targetPort: 3306
    selector:
      name: ${APP_NAME}-mysql
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    labels:
      app: ${APP_NAME}
      component: ${APP_NAME}
      group: quickstarts
      provider: s2i
      version: ${APP_VERSION}
    name: ${APP_NAME}
  spec: {}

- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      app: ${APP_NAME}
      component: ${APP_NAME}
      group: quickstarts
      provider: s2i
      version: ${APP_VERSION}
    name: ${APP_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}:latest
    resources:
      limits:
        memory: ${BUILD_MEMORY_LIMIT}
      requests:
        memory: ${BUILD_MEMORY_REQUEST}
    source:
      git:
        ref: ${GIT_REF}
        uri: ${GIT_REPO}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: BUILD_LOGLEVEL
          value: "5"
        - name: ARTIFACT_DIR
          value: ${ARTIFACT_DIR}
        - name: MAVEN_ARGS
          value: ${MAVEN_ARGS}
        - name: MAVEN_ARGS_APPEND
          value: ${MAVEN_ARGS_APPEND}
        forcePull: true
        from:
          kind: ImageStreamTag
          name: fuse7-java-openshift:${BUILDER_VERSION}
          namespace: ${IMAGE_STREAM_NAMESPACE}
        incremental: true
      type: Source
    triggers:
    - github:
        secret: ${BUILD_SECRET}
      type: GitHub
    - generic:
        secret: ${BUILD_SECRET}
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      app.openshift.io/connects-to: "${APP_NAME}-mysql"
    labels:
      app: ${APP_NAME}
      component: ${APP_NAME}
      group: quickstarts
      provider: s2i
      version: ${APP_VERSION}
      app.kubernetes.io/part-of: "${APP_NAME}"
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APP_NAME}
      component: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
      group: quickstarts
      provider: s2i
      version: ${APP_VERSION}
    template:
      metadata:
        labels:
          app: ${APP_NAME}
          component: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
          group: quickstarts
          provider: s2i
          version: ${APP_VERSION}
      spec:
        containers:
        - env:
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MYSQL_SERVICE_NAME
            value: ${APP_NAME}-mysql
          - name: MYSQL_DATABASE
            value: ${MYSQL_DATABASE}
          - name: MYSQL_USERNAME
            value: ${MYSQL_USERNAME}
          - name: MYSQL_PASSWORD
            value: ${MYSQL_PASSWORD}
          - name: AB_JOLOKIA_OFF
            value: "true"
          - name: JAVA_OPTIONS
            value: "-Dspring.profiles.active=mysql"
          image: library/${APP_NAME}:latest
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 180
          name: ${APP_NAME}
          ports:
          - containerPort: 8080
            name: http
          - containerPort: 8778
            name: jolokia
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP_NAME}
      app.kubernetes.io/part-of: "${APP_NAME}"
    name: ${APP_NAME}-mysql
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${APP_NAME}-mysql
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: ${APP_NAME}
          deploymentConfig: ${APP_NAME}-mysql
          name: ${APP_NAME}-mysql
        name: ${APP_NAME}-mysql
      spec:
        containers:
          - env:
              - name: MYSQL_USER
                value: ${MYSQL_USERNAME}
              - name: MYSQL_PASSWORD
                value: ${MYSQL_PASSWORD}
              - name: MYSQL_DATABASE
                value: ${MYSQL_DATABASE}
              - name: MYSQL_LOWER_CASE_TABLE_NAMES
                value: ${MYSQL_LOWER_CASE_TABLE_NAMES}
              - name: MYSQL_MAX_CONNECTIONS
                value: ${MYSQL_MAX_CONNECTIONS}
              - name: MYSQL_FT_MIN_WORD_LEN
                value: ${MYSQL_FT_MIN_WORD_LEN}
              - name: MYSQL_FT_MAX_WORD_LEN
                value: ${MYSQL_FT_MAX_WORD_LEN}
              - name: MYSQL_AIO
                value: ${MYSQL_AIO}
            image: mysql
            imagePullPolicy: Always
            livenessProbe:
              initialDelaySeconds: 30
              tcpSocket:
                port: 3306
              timeoutSeconds: 1
            name: ${APP_NAME}-mysql
            ports:
              - containerPort: 3306
                protocol: TCP
            readinessProbe:
              exec:
                command:
                  - /bin/sh
                  - -i
                  - -c
                  - mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE --password=$MYSQL_PASSWORD -e 'SELECT 1'
              initialDelaySeconds: 5
              timeoutSeconds: 1
            volumeMounts:
              - mountPath: /var/lib/mysql/data
                name: ${APP_NAME}-mysql-pvol
        terminationGracePeriodSeconds: 60
        volumes:
          - name: ${APP_NAME}-mysql-pvol
            persistentVolumeClaim:
              claimName: ${APP_NAME}-mysql-claim
    triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
            - ${APP_NAME}-mysql
          from:
            kind: ImageStreamTag
            name: mysql:${MYSQL_IMAGE_STREAM_TAG}
            namespace: ${IMAGE_STREAM_NAMESPACE}
        type: ImageChange
      - type: ConfigChange
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}-mysql-claim
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}

parameters:
- description: The name assigned to the application.
  displayName: Application Name
  name: APP_NAME
  required: true
  value: fuse74-demo
- description: The URL of the repository with your application source code.
  displayName: Git Repository URL
  name: GIT_REPO
  required: true
  value: https://github.com/nmajorov/fuse7-spring-code-fist.git
- description: Set this to a branch name, tag or other ref of your repository if you
    are not using the default branch.
  displayName: Git Reference
  name: GIT_REF
  value: fuse5
- description: Exposed service name.
  displayName: Service Name
  name: SERVICE_NAME
  value: camel-rest-sql
- description: Set this to the name of the TCP service of the MySQL server. You may
    need to create a server first.
  displayName: MySQL Server Service
  name: MYSQL_SERVICE_NAME
  required: true
  value: mysql
- description: The database hosted by the MySQL server to be used by the application.
  displayName: MySQL Server Database
  name: MYSQL_DATABASE
  value: fuse
- description: The username used to authenticate with the MySQL server. Leave it empty
    if authentication is disabled.
  displayName: MySQL Server Username
  name: MYSQL_USERNAME
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  required: true
  value: fuse
- description: The password used to authenticate with the MySQL server. Leave it empty
    if authentication is disabled.
  displayName: MySQL Server Password
  name: MYSQL_PASSWORD
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  required: true
  value: fuse
- description: The version of the FIS S2I builder image to use.
  displayName: Builder version
  name: BUILDER_VERSION
  value: "1.3"
- description: The application version.
  displayName: Application Version
  name: APP_VERSION
  value: 1.0.0.fuse-731003-redhat-00003
- description: Arguments passed to mvn in the build.
  displayName: Maven Arguments
  name: MAVEN_ARGS
  value: package -DskipTests -Dfabric8.skip -e -B
- description: Extra arguments passed to mvn, e.g. for multi-module builds.
  displayName: Extra Maven Arguments
  name: MAVEN_ARGS_APPEND
- description: Directory of the artifact to be built, e.g. for multi-module builds.
  displayName: Maven build directory
  name: ARTIFACT_DIR
- description: Namespace in which the Fuse ImageStreams are installed. These ImageStreams
    are normally installed in the openshift namespace. You should only need to modify
    this if you've installed the ImageStreams in a different namespace/project.
  displayName: Image Stream Namespace
  name: IMAGE_STREAM_NAMESPACE
  required: true
  value: openshift
- description: The secret needed to trigger a build.
  displayName: Git Build Secret
  from: '[a-zA-Z0-9]{40}'
  generate: expression
  name: BUILD_SECRET
- description: The amount of CPU to request.
  displayName: CPU request
  name: CPU_REQUEST
  required: true
  value: "0.2"
- description: The amount of memory required for the container to run.
  displayName: Memory request
  name: MEMORY_REQUEST
  required: true
  value: 256Mi
- description: The amount of CPU the container is limited to use.
  displayName: CPU limit
  name: CPU_LIMIT
  required: true
  value: "1.0"
- description: The amount of memory the container is limited to use.
  displayName: Memory limit
  name: MEMORY_LIMIT
  required: true
  value: 256Mi
- description: The amount of memory to request for builds.
  displayName: Build Memory request
  name: BUILD_MEMORY_REQUEST
  required: true
  value: 0.7G
- description: The amount of memory the build container is limited to use.
  displayName: Build Memory limit
  name: BUILD_MEMORY_LIMIT
  required: true
  value: 0.8G
- displayName: MySQL Lower Case Table Names
  name: MYSQL_LOWER_CASE_TABLE_NAMES
- description: The maximum permitted number of simultaneous client connections.
  displayName: MySQL Maximum number of connections
  name: MYSQL_MAX_CONNECTIONS
- description: The minimum length of the word to be included in a FULLTEXT index.
  displayName: MySQL FullText Minimum Word Length
  name: MYSQL_FT_MIN_WORD_LEN
- description: The maximum length of the word to be included in a FULLTEXT index.
  displayName: MySQL FullText Maximum Word Length
  name: MYSQL_FT_MAX_WORD_LEN
- description: Controls the innodb_use_native_aio setting value if the native AIO
    is broken.
  displayName: MySQL AIO
  name: MYSQL_AIO
- description: The tag to use for the "mysql" image stream. Typically, this aligns
    with the major.minor version of MySQL.
  displayName: MySQL Image Stream Tag
  name: MYSQL_IMAGE_STREAM_TAG
  required: true
  value: "8.0"
- description: Size of persistent storage for database volume.
  displayName: Database Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: 1Gi
